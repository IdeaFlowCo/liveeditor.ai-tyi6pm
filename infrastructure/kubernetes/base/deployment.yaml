# Kubernetes Deployment resources for the AI writing enhancement platform
# These deployments define the container configurations, replica counts, 
# resource allocations, and deployment strategies for the application components.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: ai-writing
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-writing
      component: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-writing
        component: frontend
    spec:
      containers:
      - name: frontend
        image: ai-writer-frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: NODE_ENV
          value: production
        envFrom:
        - configMapRef:
            name: app-config
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api-deployment
  labels:
    app: ai-writing
    component: backend-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-writing
      component: backend-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-writing
        component: backend-api
    spec:
      containers:
      - name: api-service
        image: ai-writer-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        env:
        - name: FLASK_ENV
          value: production
        - name: GUNICORN_WORKERS
          value: "4"
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: database-credentials
        - secretRef:
            name: redis-credentials
        - secretRef:
            name: app-secrets
        livenessProbe:
          httpGet:
            path: /api/health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /api/health/readiness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service-deployment
  labels:
    app: ai-writing
    component: ai-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-writing
      component: ai-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: ai-writing
        component: ai-service
    spec:
      containers:
      - name: ai-orchestration
        image: ai-writer-ai-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        env:
        - name: SERVICE_TYPE
          value: ai-orchestration
        - name: MAX_TOKENS
          value: "4096"
        - name: REQUEST_TIMEOUT
          value: "60"
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: openai-credentials
        - secretRef:
            name: redis-credentials
        livenessProbe:
          httpGet:
            path: /api/health/liveness
            port: http
          initialDelaySeconds: 60
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health/readiness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000